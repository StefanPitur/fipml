type mlist =
| Nil
| Cons of int @ shared * mlist @ unique

{
  let xs = Nil in
  match xs with
  | Nil -> { 0 }
  | Cons (x, x2) -> {
      match x2 with
      | Cons (y, Nil) -> { x + y }
      | Cons (y, Cons (z, _)) -> { x + y + z }
      endmatch
    }
  endmatch
}
